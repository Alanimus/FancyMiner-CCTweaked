---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by alani.
--- DateTime: 2025-06-13 1:47 p.m.
---
local function displayStatus()
    term.clear()
    term.setCursorPos(1, 1)
    term.setTextColor(colors.white)

    if mon then
        mon.clear()
        mon.setCursorPos(1, 1)
        mon.setTextColor(colors.white)
    end

    print("--- Turtle Status ---")
    monitorPrint("--- Turtle Status ---")

    if last_status == nil then
        print("Waiting for status update...")
        monitorPrint("Waiting for status update...")
    else
        print("Turtle ID: " .. tostring(last_status.id))
        monitorPrint("Turtle ID: " .. tostring(last_status.id), colors.white)

        if last_status.label and last_status.label ~= "" then
            print("Turtle Label: " .. tostring(last_status.label))
            monitorPrint("Turtle Label: " .. tostring(last_status.label), colors.white)
        end

        term.setTextColor(colors.orange)
        print("Fuel: " .. tostring(last_status.fuel))
        monitorPrint("Fuel: " .. tostring(last_status.fuel), colors.orange)

        term.setTextColor(colors.lightGray)
        print("Position: X=" .. tostring(last_status.position.x) .. ", Y=" .. tostring(last_status.position.y) .. ", Z=" .. tostring(last_status.position.z))
        monitorPrint("Position: X=" .. tostring(last_status.position.x) .. ", Y=" .. tostring(last_status.position.y) .. ", Z=" .. tostring(last_status.position.z), colors.lightGray)

        term.setTextColor(colors.white)
        print("Mining: " .. tostring(last_status.is_mining))
        monitorPrint("Mining: " .. tostring(last_status.is_mining), colors.white)

        print("DONE AT: " .. tostring(last_status.estimated_completion_time or "Calculating..."))
        monitorPrint("DONE AT: " .. tostring(last_status.estimated_completion_time or "Calculating..."), colors.white)

        print("ETA: " .. tostring(last_status.estimated_time_remaining or "Calculating..."))
        monitorPrint("ETA: " .. tostring(last_status.estimated_time_remaining or "Calculating..."), colors.white)

        if last_status.total_quarry_blocks and last_status.processed_blocks then
            term.setTextColor(colors.lightBlue)
            print("Processed: "..tostring(last_status.processed_blocks).." / "..tostring(last_status.total_quarry_blocks).." blocks")
            monitorPrint("Processed: "..tostring(last_status.processed_blocks).." / "..tostring(last_status.total_quarry_blocks).." blocks", colors.lightBlue)
        end

        term.setTextColor(colors.lightBlue)
        print("Dug: " .. tostring(last_status.dug_blocks) .. " blocks")
        monitorPrint("Dug: " .. tostring(last_status.dug_blocks) .. " blocks", colors.lightBlue)

        term.setTextColor(colors.green)
        local depth_display = tostring(-last_status.position.y) .. "m"
        if last_status.ymin then
            depth_display = depth_display .. " / " .. tostring(-last_status.ymin) .. "m"
        end
        print("Depth: " .. depth_display)
        monitorPrint("Depth: " .. depth_display, colors.green)

        term.setTextColor(colors.white)
        print("\nInventory Summary:")
        monitorPrint("Inventory Summary:", colors.white)

        if last_status.inventory_summary and #last_status.inventory_summary > 0 then
            for _, item in ipairs(last_status.inventory_summary) do
                local line = "  " .. item.name .. " (" .. tostring(item.count) .. ")"
                print(line)
                monitorPrint(line, colors.white)
            end
        else
            print("  Inventory empty or not detailed.")
            monitorPrint("  Inventory empty or not detailed.", colors.white)
        end
    end

    term.setTextColor(colors.white)
    print("\nWaiting for next update...")
    monitorPrint("Waiting for next update...", colors.white)
end
